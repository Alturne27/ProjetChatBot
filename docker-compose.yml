services :
  chatbot-front:
    container_name: chatbot-front
    build:
      context: ./front-build/
      dockerfile: dev.Dockerfile
    env_file:
      - ./front-build/.env.local
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_HOST=127.0.0.1

    volumes:
      - ./front-build:/app
      - chatbot_front_node_module:/app/node_modules
    restart: always
    ports:
      - 3000:3000
    networks:
      - ollama-docker
    depends_on:
      - chatbot-db

  chatbot-db:
    container_name: chatbot-db
    image: postgres

    env_file:
      - ./db-build/.env.database
    ports:
      - 5432:5432
    volumes:
     - ./pgdata:/var/lib/postgresql/data
    networks:
      - ollama-docker
    restart: unless-stopped
    
  ollama:
    container_name: ollama
    pull_policy: always
    image: ollama/ollama:latest
    tty: true
    ports:
      - 11434:11434
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all 
              capabilities: [gpu]
    environment:
      OLLAMA_KEEP_ALIVE: -1
    volumes:
      - ./ollama/ollama:/root/.ollama
      - ./ollama-build/init.sh:/init.sh
      - ./ollama-build/Modelfile:/Modelfile
    networks:
      - ollama-docker
    restart: always
    entrypoint: ["/usr/bin/bash", "/init.sh"]

  api:
    container_name : api
    build:
      context: ./api-build/
      dockerfile: Dockerfile
    env_file:
      - ./api-build/.env.database
    ports:
      - 80:80
    volumes:
      - ./api:/app
      - ./data:/data
      - ./chroma-db:/chroma-db
    networks:
      - ollama-docker
    tty : true
    restart: always
    depends_on:
      - chatbot-front
      - chatbot-db
    
  easy-dataset:
    image: ghcr.io/conardli/easy-dataset
    container_name: easy-dataset
    ports:
      - '1717:1717'
    volumes:
      - ./easy-dataset-db:/app/local-db
    restart: unless-stopped
    networks:
      - ollama-docker


networks:
  ollama-docker:
    driver: bridge

volumes:
  chatbot_front_node_module: